{"ast":null,"code":"\"use client\";\n\nvar __defProp = Object.defineProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value); // src/InView.tsx\n\n\nimport * as React from \"react\"; // src/observe.ts\n\nvar observerMap = /* @__PURE__ */new Map();\nvar RootIds = /* @__PURE__ */new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\n\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\n\nfunction getRootId(root) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(key => options[key] !== void 0).map(key => {\n    return `${key}_${key === \"root\" ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\n\nfunction createObserver(options) {\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    const elements = /* @__PURE__ */new Map();\n    let thresholds;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        var _a;\n\n        const inView = entry.isIntersecting && thresholds.some(threshold => entry.intersectionRatio >= threshold);\n\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          entry.isVisible = inView;\n        }\n\n        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach(callback => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {};\n  }\n\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options);\n  const callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n} // src/InView.tsx\n\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== \"function\";\n}\n\nvar InView = class extends React.Component {\n  constructor(props) {\n    super(props);\n\n    __publicField(this, \"node\", null);\n\n    __publicField(this, \"_unobserveCb\", null);\n\n    __publicField(this, \"handleNode\", node => {\n      if (this.node) {\n        this.unobserve();\n\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          this.setState({\n            inView: !!this.props.initialInView,\n            entry: void 0\n          });\n        }\n      }\n\n      this.node = node ? node : null;\n      this.observeNode();\n    });\n\n    __publicField(this, \"handleChange\", (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        this.unobserve();\n      }\n\n      if (!isPlainChildren(this.props)) {\n        this.setState({\n          inView,\n          entry\n        });\n      }\n\n      if (this.props.onChange) {\n        this.props.onChange(inView, entry);\n      }\n    });\n\n    this.state = {\n      inView: !!props.initialInView,\n      entry: void 0\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold,\n      root,\n      rootMargin,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n\n    if (typeof children === \"function\") {\n      const {\n        inView,\n        entry\n      } = this.state;\n      return children({\n        inView,\n        entry,\n        ref: this.handleNode\n      });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n    return React.createElement(as || \"div\", {\n      ref: this.handleNode,\n      ...props\n    }, children);\n  }\n\n}; // src/useInView.tsx\n\nimport * as React2 from \"react\";\n\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _a;\n\n  const [ref, setRef] = React2.useState(null);\n  const callback = React2.useRef(onChange);\n  const [state, setState] = React2.useState({\n    inView: !!initialInView,\n    entry: void 0\n  });\n  callback.current = onChange;\n  React2.useEffect(() => {\n    if (skip || !ref) return;\n    let unobserve;\n    unobserve = observe(ref, (inView, entry) => {\n      setState({\n        inView,\n        entry\n      });\n      if (callback.current) callback.current(inView, entry);\n\n      if (entry.isIntersecting && triggerOnce && unobserve) {\n        unobserve();\n        unobserve = void 0;\n      }\n    }, {\n      root,\n      rootMargin,\n      threshold,\n      // @ts-ignore\n      trackVisibility,\n      // @ts-ignore\n      delay\n    }, fallbackInView);\n    return () => {\n      if (unobserve) {\n        unobserve();\n      }\n    };\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string, so it won't change between renders.\n  Array.isArray(threshold) ? threshold.toString() : threshold, ref, root, rootMargin, triggerOnce, skip, trackVisibility, fallbackInView, delay]);\n  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n  const previousEntryTarget = React2.useRef(void 0);\n\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: void 0\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry];\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport { InView, defaultFallbackInView, observe, useInView };","map":{"version":3,"sources":["C:/Users/uthay/Downloads/portfolio123/project/node_modules/react-intersection-observer/dist/esm/index.js"],"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","React","observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","defaultFallbackInView","inView","getRootId","root","has","get","set","toString","optionsToId","options","keys","sort","filter","map","createObserver","id","instance","elements","thresholds","observer","IntersectionObserver","entries","forEach","entry","_a","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","target","callback","Array","isArray","observe","element","fallbackInView","window","bounds","getBoundingClientRect","time","boundingClientRect","intersectionRect","rootBounds","callbacks","push","unobserve","splice","indexOf","length","delete","size","disconnect","isPlainChildren","props","children","InView","Component","constructor","node","triggerOnce","skip","setState","initialInView","observeNode","onChange","state","componentDidMount","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_unobserveCb","handleChange","render","ref","handleNode","as","createElement","React2","useInView","setRef","useState","useRef","current","useEffect","entryTarget","previousEntryTarget","result"],"mappings":"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","sourcesContent":["\"use client\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/InView.tsx\nimport * as React from \"react\";\n\n// src/observe.ts\nvar observerMap = /* @__PURE__ */ new Map();\nvar RootIds = /* @__PURE__ */ new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\nfunction defaultFallbackInView(inView) {\n  unsupportedValue = inView;\n}\nfunction getRootId(root) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(\n    (key) => options[key] !== void 0\n  ).map((key) => {\n    return `${key}_${key === \"root\" ? getRootId(options.root) : options[key]}`;\n  }).toString();\n}\nfunction createObserver(options) {\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n  if (!instance) {\n    const elements = /* @__PURE__ */ new Map();\n    let thresholds;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        var _a;\n        const inView = entry.isIntersecting && thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          entry.isVisible = inView;\n        }\n        (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id,\n      observer,\n      elements\n    };\n    observerMap.set(id, instance);\n  }\n  return instance;\n}\nfunction observe(element, callback, options = {}, fallbackInView = unsupportedValue) {\n  if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds\n    });\n    return () => {\n    };\n  }\n  const { id, observer, elements } = createObserver(options);\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    callbacks.splice(callbacks.indexOf(callback), 1);\n    if (callbacks.length === 0) {\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n    if (elements.size === 0) {\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n\n// src/InView.tsx\nfunction isPlainChildren(props) {\n  return typeof props.children !== \"function\";\n}\nvar InView = class extends React.Component {\n  constructor(props) {\n    super(props);\n    __publicField(this, \"node\", null);\n    __publicField(this, \"_unobserveCb\", null);\n    __publicField(this, \"handleNode\", (node) => {\n      if (this.node) {\n        this.unobserve();\n        if (!node && !this.props.triggerOnce && !this.props.skip) {\n          this.setState({ inView: !!this.props.initialInView, entry: void 0 });\n        }\n      }\n      this.node = node ? node : null;\n      this.observeNode();\n    });\n    __publicField(this, \"handleChange\", (inView, entry) => {\n      if (inView && this.props.triggerOnce) {\n        this.unobserve();\n      }\n      if (!isPlainChildren(this.props)) {\n        this.setState({ inView, entry });\n      }\n      if (this.props.onChange) {\n        this.props.onChange(inView, entry);\n      }\n    });\n    this.state = {\n      inView: !!props.initialInView,\n      entry: void 0\n    };\n  }\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n  componentWillUnmount() {\n    this.unobserve();\n  }\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView\n    } = this.props;\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay\n      },\n      fallbackInView\n    );\n  }\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props;\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children\n    );\n  }\n};\n\n// src/useInView.tsx\nimport * as React2 from \"react\";\nfunction useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange\n} = {}) {\n  var _a;\n  const [ref, setRef] = React2.useState(null);\n  const callback = React2.useRef(onChange);\n  const [state, setState] = React2.useState({\n    inView: !!initialInView,\n    entry: void 0\n  });\n  callback.current = onChange;\n  React2.useEffect(\n    () => {\n      if (skip || !ref) return;\n      let unobserve;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry\n          });\n          if (callback.current) callback.current(inView, entry);\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            unobserve();\n            unobserve = void 0;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay\n        },\n        fallbackInView\n      );\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay\n    ]\n  );\n  const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n  const previousEntryTarget = React2.useRef(void 0);\n  if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: void 0\n    });\n  }\n  const result = [setRef, state.inView, state.entry];\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\nexport {\n  InView,\n  defaultFallbackInView,\n  observe,\n  useInView\n};\n//# sourceMappingURL=index.mjs.map"]},"metadata":{},"sourceType":"module"}